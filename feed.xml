<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://mqsh.me/</id><title>Subaru</title><subtitle>前端搬砖仔</subtitle> <updated>2021-12-31T19:24:28+08:00</updated> <author> <name>MAO</name> <uri>https://mqsh.me/</uri> </author><link rel="self" type="application/atom+xml" href="https://mqsh.me/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://mqsh.me/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2021 MAO </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Never say never —— 致敬2021</title><link href="https://mqsh.me/posts/never-say-never/" rel="alternate" type="text/html" title="Never say never —— 致敬2021" /><published>2021-12-31T19:03:36+08:00</published> <updated>2021-12-31T19:23:59+08:00</updated> <id>https://mqsh.me/posts/never-say-never/</id> <content src="https://mqsh.me/posts/never-say-never/" /> <author> <name>MAO</name> </author> <category term="NEWYEAR" /> <summary> 無視道與理 是與非非 繼續往天飛 再去遁地 在煩亂之中找找氧氣 失意能否不提起 当非常规已经逐渐变成常规的2021年，又是一年走到了最后。 去年的最后，我们煎熬于疫苗出现之前的暗淡，想要看到最后的那一丝光明。一年过去，全世界已经有了疫苗，但是整个世界还是没有走出疫情。 去年的最后，我们奢望于2021年可以恢复之前的正常生活，一年过去，我们还是没有办法正常跨境旅行，甚至连跨省都变成了一件麻烦的事情。 去年的最后，我感受到了我在那一年中的变化。一年过去，我顺应了那一年的变化，一步一脚印走到了现在，得到了那时候甚至有些奢望的成果。 365天真是一个说长不长，说短不短的循环。 回望这一个年度，感觉贯穿全年的是找工作的尝试。 这一个年度里，我是从应征，面试，失败的循环中走过来的。其实从去年的年末开始，我就有了想要离开当前工作岗位的想法，然后就带着尝试的想法逐渐开始了寻找... </summary> </entry> <entry><title>React和它的小伙伴们(3) - React Hooks</title><link href="https://mqsh.me/posts/react3/" rel="alternate" type="text/html" title="React和它的小伙伴们(3) - React Hooks" /><published>2021-07-10T16:00:00+08:00</published> <updated>2021-07-10T16:00:00+08:00</updated> <id>https://mqsh.me/posts/react3/</id> <content src="https://mqsh.me/posts/react3/" /> <author> <name>MAO</name> </author> <category term="技术" /> <summary> 本文为近期有关于React Hooks源码学习的笔记小结，原文对应为： https://juejin.cn/post/6944863057000529933 一 为什么要使用Hooks？ React Hooks是React 16.8中引入的有关于函数组件的相关进化，解决了函数组件没有state、生命周期逻辑不能复用的问题。 引申： Class组件和函数式组件的优缺点 Function组件在之前主要做简单的展示逻辑，没有复杂的业务逻辑或者状态记录。而Class组件有着完善的生命周期支撑。在Hooks引入之后，函数式组件也可以进行状态记录，并且可以进行一些逻辑复用，提供了另一种编码的可能。 另一层意义上，后文也会说道，Class组件只要一次实例化之后就能保存状态数据，而函数式组件每次都会重新执行，所以需要Hooks这种机制来保存状态数据。 二 TL;DR 函数组件的... </summary> </entry> <entry><title>JavaScript红宝书再阅读（2）</title><link href="https://mqsh.me/posts/javascript-reading-7/" rel="alternate" type="text/html" title="JavaScript红宝书再阅读（2）" /><published>2021-03-06T23:00:00+08:00</published> <updated>2021-03-06T23:00:00+08:00</updated> <id>https://mqsh.me/posts/javascript-reading-7/</id> <content src="https://mqsh.me/posts/javascript-reading-7/" /> <author> <name>MAO</name> </author> <category term="技术" /> <summary> 第7章 迭代器与生成器 1. 迭代器 迭代器模式描述了一个方案，即可以把有些实现了正式的Iterable接口，而且可以通过迭代器Iterator消费的结构称为”可迭代对象“（iterable）。 迭代器无需了解与其关联的可迭代对象的结构，只需要知道如何取得连续的值。 可迭代协议（实现Iterable接口）： 需要具备的两种能力: 支持迭代的自我识别能力 创建实现Iterator接口的对象的能力 在ES中，上述两点意味着： 必须暴露一个属性作为”默认迭代器“，而且这个属性必须使用Symbol.iterator作为键。 这个迭代器必须引用一个迭代器工厂函数，调用这个工厂函数必须返回一个新迭代器。 实现了该接口的内置类型： 字符串、数组、映射（Map）、集合（Set）、arguments对象、NodeList等DOM集合类型 接收可迭代对象的原... </summary> </entry> <entry><title>JavaScript红宝书再阅读（1）</title><link href="https://mqsh.me/posts/javascript-reading-9/" rel="alternate" type="text/html" title="JavaScript红宝书再阅读（1）" /><published>2021-03-03T19:00:00+08:00</published> <updated>2021-03-03T19:00:00+08:00</updated> <id>https://mqsh.me/posts/javascript-reading-9/</id> <content src="https://mqsh.me/posts/javascript-reading-9/" /> <author> <name>MAO</name> </author> <category term="技术" /> <summary> 第9章 代理与反射 注意：本章的内容是ES6之后的专属，注意兼容性。 1. 代理的定义与创建 代理是目标对象的抽象，类似于C++的指针。可以用作目标对象的替身，但又完全独立于目标对象。 Ex: const target = { id: 'target', }; const handler = {}; //需要两个参数，一个是目标对象，一个是处理程序对象，生成一个新的代理对象 const proxy = new Proxy(target, handler); console.log(target.id); // target console.log(proxy.id); // target target.id = 'foo'; console.log(target.id, proxy.id); //foo foo proxy.id = 'bar'; conso... </summary> </entry> <entry><title>孤身走我路 —— 记2020</title><link href="https://mqsh.me/posts/2020newyear/" rel="alternate" type="text/html" title="孤身走我路 —— 记2020" /><published>2020-12-31T19:00:00+08:00</published> <updated>2020-12-31T19:00:00+08:00</updated> <id>https://mqsh.me/posts/2020newyear/</id> <content src="https://mqsh.me/posts/2020newyear/" /> <author> <name>MAO</name> </author> <category term="NEWYEAR" /> <summary> 题记： 以往的年末总结都是在年末的最后一天。特殊的一年就将走到尾声了，今年的经历了许多，所以就先行准备好了。 我已决意踏遍长路，跟心中拍子。傲然独舞永没停步，不想管终点何日到 。 2020年，这一年估计是谁都没想到会这样度过的一年。从年初的惊慌失措，到年终的坦然面对。这不平凡的一年，也经历了许多不平凡的事情，做出了很多关于人生的决定。这一年的事情或许也已经决定了未来好几年的人生走向。从年末回望年初，那时候根本不会想到这一年会是这样度过。 2020年的一切是从一种未知病毒的了解开始的，并且贯穿了这一整年的基调。其实，这场疫情估计也像改变了我的人生一样改变了世界上很多人的人生。对于我来说，这一年的转折或许出现在下半年的第一天，上下两个半年在我现在看来似乎判若两人。 在疫情全面爆发之前，安排了一场日本旅行。这是一场不知道何日更重游的出境。突如其来的疫情，让闭关锁国的常态化，... </summary> </entry> </feed>
